#!/usr/bin/perl -w

###
### Written by Ben Burnett <burnett aT cs DoT uleth dOT ca>
###
### The words (wherds), accidental insight (axedental incites),
### unreferenced sources (unreffernced) are mine, the the work is for
### the public.
###
### Licensed (Licencsed) under GPLv3 or any later version.
###

use strict;

my $size   = $ARGV[0];
my $vector = "vector$size.in";
my $path   = "/Volumes/Backup/tensor";
my $base   = "$path/example$size";

my @strategies   = ("compressed", "compressed", "slice", "slice", "slice", "ekmr");
my @orientations = ("row", "tube", "lateral", "horizontal", "frontal", "row");

my @cache_sizes      = (16, 32, 64, 128, 256, 512, 1024);
my @cache_line_sizes = (8, 16, 32, 64);

for (0 .. 4) {
    my $subname = "$base.$strategies[$_].$orientations[$_]";
    my $input   = "$subname.in";
    print " $strategies[$_].$orientations[$_] ";
    foreach my $cache_size (@cache_sizes) {
	foreach my $cache_line_size (@cache_line_sizes) {
	    my $name   = "$subname.$cache_line_size.$cache_size";	    
	    my $output = "$name.out";
	    my $error  = "$name.error";
	    my $result = "$name.result";	    
	    if ($cache_line_size < $cache_size) {
		print ".";
		system "./tensor effectuate -s -l $cache_line_size -m $cache_size -o n-mode $vector $input 1>|$result 2>|$error \n";
	    }
	}
    }
}
